diff --git a/tmk_core/protocol/usb_descriptor.c b/tmk_core/protocol/usb_descriptor.c
index c7fb660b..1d5ca604 100644
--- a/tmk_core/protocol/usb_descriptor.c
+++ b/tmk_core/protocol/usb_descriptor.c
@@ -1164,6 +1164,10 @@ void set_serial_number_descriptor(void) {
 
 #endif // defined(SERIAL_NUMBER)
 
+__attribute__((weak)) const USB_Descriptor_Device_t* get_usb_device_descriptor_ptr() {
+    return &DeviceDescriptor;
+}
+
 /**
  * This function is called by the library when in device mode, and must be overridden (see library "USB Descriptors"
  * documentation) by the application code so that the address and size of a requested descriptor can be given
@@ -1179,7 +1183,7 @@ uint16_t get_usb_descriptor(const uint16_t wValue, const uint16_t wIndex, const
 
     switch (DescriptorType) {
         case DTYPE_Device:
-            Address = &DeviceDescriptor;
+            Address = get_usb_device_descriptor_ptr();
             Size    = sizeof(USB_Descriptor_Device_t);
 
             break;
diff --git a/tmk_core/protocol/usb_descriptor.h b/tmk_core/protocol/usb_descriptor.h
index 1de8c5ec..9018102f 100644
--- a/tmk_core/protocol/usb_descriptor.h
+++ b/tmk_core/protocol/usb_descriptor.h
@@ -295,3 +295,6 @@ enum usb_endpoints {
 #define DIGITIZER_EPSIZE 8
 
 uint16_t get_usb_descriptor(const uint16_t wValue, const uint16_t wIndex, const uint16_t wLength, const void** const DescriptorAddress);
+
+const USB_Descriptor_Device_t* get_usb_device_descriptor_ptr(void);
+extern const USB_Descriptor_Device_t DeviceDescriptor;

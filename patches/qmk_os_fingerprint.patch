diff --git a/tmk_core/protocol/chibios/usb_main.c b/tmk_core/protocol/chibios/usb_main.c
index f9d7f5c4..b8f82c2a 100644
--- a/tmk_core/protocol/chibios/usb_main.c
+++ b/tmk_core/protocol/chibios/usb_main.c
@@ -42,6 +42,8 @@
 extern keymap_config_t keymap_config;
 #endif
 
+__attribute__((weak)) void trace_usb_get_descriptor(const uint8_t dtype, const uint16_t w_length) {}
+
 /* ---------------------------------------------------------
  *       Global interface variables and declarations
  * ---------------------------------------------------------
@@ -82,6 +84,8 @@ static bool __attribute__((__unused__)) receive_report(usb_endpoint_out_lut_t en
 static const USBDescriptor *usb_get_descriptor_cb(USBDriver *usbp, uint8_t dtype, uint8_t dindex, uint16_t wIndex) {
     usb_control_request_t *setup = (usb_control_request_t *)usbp->setup;
 
+    trace_usb_get_descriptor(dtype, setup->wLength);
+
     static USBDescriptor descriptor;
     descriptor.ud_string = NULL;
     descriptor.ud_size   = get_usb_descriptor(setup->wValue.word, setup->wIndex, setup->wLength, (const void **const) & descriptor.ud_string);
diff --git a/tmk_core/protocol/lufa/lufa.c b/tmk_core/protocol/lufa/lufa.c
index d5946813..432464b2 100644
--- a/tmk_core/protocol/lufa/lufa.c
+++ b/tmk_core/protocol/lufa/lufa.c
@@ -866,6 +866,10 @@ void protocol_post_task(void) {
 #endif
 }
 
+__attribute__((weak)) void trace_usb_get_descriptor(const uint8_t dtype, const uint16_t w_length) {}
+
 uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue, const uint16_t wIndex, const void **const DescriptorAddress) {
+    trace_usb_get_descriptor((wValue >> 8), USB_ControlRequest.wLength);
+
     return get_usb_descriptor(wValue, wIndex, USB_ControlRequest.wLength, DescriptorAddress);
 }
diff --git a/tmk_core/protocol/vusb/vusb.c b/tmk_core/protocol/vusb/vusb.c
index 1f0f8266..19ad7e36 100644
--- a/tmk_core/protocol/vusb/vusb.c
+++ b/tmk_core/protocol/vusb/vusb.c
@@ -50,6 +50,9 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.
 #    include "os_detection.h"
 #endif
 
+ __attribute__((weak))void trace_usb_get_descriptor(const uint8_t dtype, const uint16_t w_length) {}
+
+
 /*
  * Interface indexes
  */
@@ -1058,6 +1061,8 @@ const PROGMEM usbConfigurationDescriptor_t usbConfigurationDescriptor = {
 USB_PUBLIC usbMsgLen_t usbFunctionDescriptor(struct usbRequest *rq) {
     usbMsgLen_t len = 0;
 
+    trace_usb_get_descriptor(rq->wValue.bytes[1], rq->wLength.word);
+
     switch (rq->wValue.bytes[1]) {
         case USBDESCR_DEVICE:
             usbMsgPtr = (usbMsgPtr_t)&usbDeviceDescriptor;
